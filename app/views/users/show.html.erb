<div class = "container">


  

  <br>
  <br>
  <br>
  <br>
  <br>

  <%= content_tag :div, class: "bids", data: {bids: @bidds} do %>
  <% end %>
  <%= content_tag :div, class: "buys", data: {buys: @buys} do %>
  <% end %>
  <!-- when this changes: the bids oh with the update action your saying -->

  <div class="row">
    <div class="col-md-12">
      <h3>See your bids</h3>
      <div class="panel-group" id="accordion">
  <% @bidds.each_with_index do |a, index| %>
    
      <div class="panel panel-default">
        <div class="panel-heading">
          <h4 class="panel-title">
      <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion" href="#collapse-<%= a.id %>"><%= a.event_title %> - <%= a.id %><i class="indicator icon_plus_alt2 pull-right"></i></a>
      </h4>
        </div>
        <div id="collapse-<%= a.id %>" class="panel-collapse collapse">
          <div class="panel-body">
            <div class="text-center">
                <div class="chart-container" style="min-height: 400px; min-width: 600px" data-buy-id="<%= a.id %>" data-bid="<%= a.bid %>" ></div>

                <div class="well">
                  <p> lowest: <%= a.lowest_price %> </p>
                  <% if a.bid  == 0 %>
                    <p>Price: <%= a.saved_bid %></p>
                  <%else%>
                    <p>Price: <%= a.bid %></p>
                  <% end %>
                  <h3>Edit Your Bid</h3>
                  <%= form_tag "/bids/#{a.id}", method: :patch do %>
                    <div>
                      <%= label_tag :bid %>
                      <%= text_field_tag :bid, a.bid, placeholder: "Edit Bid" %>
                    </div>
                    
                    <div>
                      <%= submit_tag "Submit" %>
                    </div>
                  <%end%>
                </div>
              </div>
          </div>
        </div>
      </div>

          
  <% end %>
      </div>

    </div>
    <!-- End col-md-12-->
  </div>




  
  
  <br>


  <% content_for :javascript do %>
  <script src="https://code.highcharts.com/stock/highstock.js"></script>
  <script type='text/javascript'>

    $(function () { 

    
    //var chart = buildChart('container', id, bid);

    var my_bids = $('.bids').data('bids');
    var my_buys = $('.buys').data('buys');

    function buildChart(container, bid_id, bid_value) {
      return Highcharts.stockChart({

        chart: {
          renderTo: container
        },

        rangeSelector: {
          selected: 4
        },

        yAxis: { softMin: -1, softMax:1, 
          labels: {
            formatter: function () {
              return (this.value > 0 ? ' + ' : '') + this.value;
            }
          },
          plotLines: [{
            value: bid,
            color: 'green',
            dashStyle: 'shortdash',
            width: 2,
            label: {
              text: 'Bid Value ' + bid_value
            }
          }]
        },

        plotOptions: {
          series: {
            showInNavigator: true
          }
        },

        tooltip: {
          pointFormat: '<span style="color:{series.color}">{series.name}</span>: <b>{point.y}</b><br/>',
          valueDecimals: 2,
          split: true
        },

        series: [
        {
          name: 'Average Price',
          data: filter(my_buys, bid_id, 'average_price')
        },
        {
          name: 'Lowest Price',
          data: filter(my_buys, bid_id, 'lowest_price')
        }
        ]
      });
    }

    var containers = $('.chart-container');

    for (var i = 0; i < containers.length; i++) {
      var bid = parseInt($(containers[i]).attr('data-bid'));
      var id = parseInt($(containers[i]).attr('data-buy-id'));
      buildChart(containers[i], id, bid);
    }

    //var chart = buildChart('container', id, bid);

    function compare(a,b) {

      if (a[0] < b[0]) {
        return -1;
      }
      if (a[0] > b[0]) {
        return 1;
      }
      return 0;
    }

    function filter(data, id, valueSelector) {
      return data.filter(x => x.bid_id === id).map(x => [new Date(x.created_at).getTime(), x[valueSelector]]).sort(compare);
    }

    $('#rerender').on('click', function() {

      // with these two functions you can update a chart
      // to get real time going, you would either
      // 1. create a setinterval function, then everytime yoget new data call thee two function, but i dont know what the ruby way to do that is
      // 2. a real real time connection using something like socket io it would have to be done in js or a framework of js bcuz you need js to not hae to refresh im not sure how to do that
      // I can help you with it, but i need to do some research on rails first
      // in plain js without rails it would have been a breeze to show you how
      // with rails not so much ya im not sure appreciate it thanks mate in order to update do i have to call the function somewhere else or is all set?

      // no you need to create a new click handler, and it that click handler
      // you need to update the my_bids and the my_buynows

      chart.series[0].update({
        data: filter(bids, 224, 'average_price')
      });
      chart.series[1].update({
        data: filter(bids, 224, 'lowest_price')
      });
    });


  });
</script>
<%end%>
</div>